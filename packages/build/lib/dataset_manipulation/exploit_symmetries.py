"""
Exploit symmetries in three variable polynomials to generate up to six
instances out of each existing one.

The task at hand consists in classify this features.
We will take advantage of the fact that we can change the target by
reordering the features.

This file will contain:
- features_to_canonical_ordering: a function able to reorder the features so
that the target becomes '1', this ordering is called the canonical order.
- give_all_symmetries: a function that given the canonical order returns the
reorderings for each of the possible targets '1','2',...,'6'.
"""
from itertools import permutations

nvar = 3
variables = list(range(nvar))
perms = [list(elem) for elem in permutations(variables)]


def features_to_canonical_target(features, optimal_ordering):
    """
    Reorder the features for the target to be '1'.

    This is done by reordering the features according to the optimal variable
    ordering of the set of polynomials.
    """
    variable_orderings = perms[optimal_ordering]
    nfeatures = len(features)
    split_features = [features[int(var*nfeatures/nvar):
                               int((var+1)*nfeatures/nvar)]
                      for var in range(nvar)]
    ordered_features = [split_features[variable_orderings[i]]
                        for i in range(nvar)]
    return ordered_features


def give_all_symmetries(features, optimal_ordering):
    """Reorder the features for all possible targets.
    Returns a list of of all symmetries, the first one
    corresponding to the optimal ordering"""
    ordered_features = features_to_canonical_target(features,
                                                    optimal_ordering)
    all_symmetries = []
    for perm in perms:
        new_order_features = [0]*nvar
        for index, var in enumerate(perm):
            new_order_features[var] = ordered_features[index]
        flatten_new_order_features = [elem for lst in new_order_features
                                      for elem in lst]
        all_symmetries.append(flatten_new_order_features)
    return all_symmetries
